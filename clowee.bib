@InProceedings{Taibi2007IFIP,
author="Taibi, {D}avide 
and Lavazza, {L}uigi
and Morasca, {S}andro",
title="OpenBQR: a framework for the assessment of OSS",
booktitle="Open Source Development, Adoption and Innovation",
year="2007",
publisher="Springer US",
address="Boston, MA",
pages="173--186",
abstract="People and organizations that are considering the adoption of OSS, or that need to choose among different OS products face the problem of evaluating OSS in a systematic, sound and complete way. While several proposals concerning the evaluation of costs and benefits exist, little attention has been given to the evaluation of technical qualities and, in general, to the ``usage-oriented'' issues. In this paper the existing proposals are examined, the different types of qualities and issues that are relevant to potential users are described, and a coherent and innovative method for the evaluation of OSS is proposed. The proposed method is expected to support the potential user in the evaluation and choice of OSS in a flexible way, taking into account all the aspects that are relevant to the user.",
isbn="978-0-387-72486-7",
doi="https://doi.org/10.1007/978-0-387-72486-7_14",
}

@InProceedings{Taibi2007TOSS1,
author = "Taibi, {D}avide 
and Chinosi, {M}ichele 
and Lavazza, {L}uigi",
year = "2007",
booktitle = "TOSS - Trust in Open Source Software. Colocated with OSS 2007",
title = "BlogMeter: web sentiment platform",
}

@InProceedings{Taibi2007TOSS2,
author = "Taibi, {D}avide 
and Chinosi, {M}ichele 
and del Bianco, {V}ieri 
and Lavazza, {L}uigi",
year = "2007",
month = "01",
title = "A GQM Plan for the evaluation of the trustworthiness of Open Source Software",
booktitle = "TOSS - Trust in Open Source Software. Colocated with OSS 2007",
}


@misc{Chinosi2008,
author = "Chinosi, {M}ichele 
and Lavazza, {L}uigi 
and Morasca, {S}andro 
and Taibi, {D}avide",
year = "2008",
month = "01",
pages = "",
title = "How European software industry perceives OSS trustworthiness and what are the specific criteria used to establish trust in OSS",
howpublished = "QualiPSo IST- FP6-IP-034763 report", 
}

@InProceedings{Gerani2008,
author = "Gerani, {S}hima 
and Keikha, {M}ostafa 
and Carman, {M}ark 
and Gwadera, {R}obert 
and Taibi, {D}avide 
and Crestani, {F}abio",
year = "2008",
month = "01",
pages = "",
title = "University of Lugano at TREC 2008 Blog Track",
}

@InProceedings{Taibi2008SYMP,
author = "Taibi, {D}avide",
year = "2008",
month = "01",
pages = "",
title = "Defining an Open Source Software Trustworthiness Model",
booktitle = "IDoESE colocated with ESEM",
}

@InProceedings{Taibi2008IFIP,
author="Taibi, {D}avide
and Del Bianco, {V}ieri
and Dalle Carbonare, {D}avide 
and Lavazza, {L}uigi
and Morasca, {S}andro",
title="Towards The Evaluation of OSS Trustworthiness: Lessons Learned From The Observation of Relevant OSS Projects",
booktitle="Open Source Development, Communities and Quality",
year="2008",
publisher="Springer US",
address="Boston, MA",
pages="389--395",
abstract="To facilitate the adoption of open-source software (OSS) in industry, it is important to provide potential users (i.e., those who could decide to adopt OSS) with the means for evaluating the trustworthiness of OS products. This paper presents part of the work done in the QualiPSo project for this purpose. A set of factors that are believed to affect the perception of trustworthiness are introduced. In order to test the feasibility of deriving a correct, complete and reliable evaluation of trustworthiness on the basis of these factors, a set of well-known OSS projects have been chosen. Then, the possibility to assess the proposed factors on each project was verified: not all the factors appear to be observable or measurable. The paper reports what information is available to support the evaluation and what is not. This knowledge is considered to be useful to users, who are warned that there are still dark areas in the characterization of OSS products, and to developers, who should provide more data and characteristics on their products in order to support their adoption.",
isbn="978-0-387-09684-1",
DOI="https://doi.org/10.1007/978-0-387-09684-1_37",
}

@InProceedings{DelBianco2009,
author="Del Bianco, {V}ieri
and Lavazza, {L}uigi
and Morasca, {S}andro
and Taibi, {D}avide",
title="Quality of Open Source Software: The QualiPSo Trustworthiness Model",
booktitle="Open Source Ecosystems: Diverse Communities Interacting",
year="2009",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="199--212",
abstract="Trustworthiness is one of the main issues upon which the decision whether to adopt an Open-Source Software (OSS) product is based. The work described here is part of an activity that has the goals of 1) defining an adequate notion of trustworthiness of software products and artifacts and 2) identifying a number of factors that influence it. Specifically, this paper reports about the identification of the ``dimensions'' of trustworthiness, i.e., of the high-level qualities that software products and artefacts have to posses in order to be considered trustworthy. These dimensions are described by means of a conceptual model of trustworthiness, which comprises the representation of the factors that affect the user's perception of trustworthiness, as well as the objective characteristics of the products that contribute to ``build'' trustworthi-ness. The aforementioned model is equipped with a measurement plan that de-scribes, at the operational level, how to perform the evaluation of the trustwor-thiness of OSS products. The proposed model provides the basis to build quantitative models of the trustworthiness of OSS products and artifacts that are able to explain the relationships between the (objectively observable) characteristics of OSS products and the level of trustworthiness perceived by the users of such products.",
isbn="978-3-642-02032-2",
DOI="10.1007/978-3-642-02032-2_18",
}

@InProceedings{Morasca2009,
author="Morasca, {S}andro
and Taibi, {D}avide
and Tosi, {D}avide",
booktitle="2009 ICSE Workshop on Emerging Trends in Free/Libre/Open Source Software Research and Development", 
title="Towards certifying the testing process of Open-Source Software: New challenges or old methodologies?", 
year="2009",
volume="",
number="",
pages="25-30",
doi="10.1109/FLOSS.2009.5071356",
}

@InProceedings{DelBianco2010IFIP,
author="Del Bianco, {V}ieri
and Lavazza, {L}uigi
and Morasca, {S}andro
and Taibi, {D}avide
and Tosi, {D}avide",
title="An Investigation of the Users' Perception of OSS Quality",
booktitle="Open Source Software: New Horizons",
year="2010",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="15--28",
abstract="The quality of Open Source Software (OSS) is generally much debated. Some state that it is generally higher than closed-source counterparts, while others are more skeptical. The authors have collected the opinions of the users concerning the quality of 44 OSS products in a systematic manner, so that it is now possible to present the actual opinions of real users about the quality of OSS products. Among the results reported in the paper are: the distribution of trustworthiness of OSS based on our survey; a comparison of the trustworthiness of the surveyed products with respect to both open and closed-source competitors; the identification of the qualities that affect the perception of trustworthiness, based on rigorous statistical analysis.",
isbn="978-3-642-13244-5",
DOI="10.1007/978-3-642-13244-5_2",
}

@InProceedings{Lavazza2010AGILE,
author="Lavazza, {L}uigi
and Morasca, {S}andro
and Taibi, {D}avide
and Tosi, {D}avide",
title="Applying SCRUM in an OSS Development Process: An Empirical Evaluation",
booktitle="Agile Processes in Software Engineering and Extreme Programming",
year="2010",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="147--159",
abstract="Open Source Software development often resembles Agile models. In this paper, we report about our experience in using SCRUM for the development of an Open Source Software Java tool. With this work, we aim at answering the following research questions: 1) is it possible to switch successfully to the SCRUM methodology in an ongoing Open Source Software development process? 2) is it possible to apply SCRUM when the developers are geographically distributed? 3) does SCRUM help improve the quality of the product and the productivity of the process? We answer to these questions by identifying a set of measures and by comparing the data we collected before and after the introduction of SCRUM. The results seem to show that SCRUM can be introduced and used in an ongoing geographically distributed Open Source Software process and that it helps control the development process better.",
isbn="978-3-642-13054-0",
DOI= "https://doi.org/10.1007/978-3-642-13054-0_11",
}

@InProceedings{Lavazza2010ACMIEEE,
author="Lavazza, {L}uigi
and Morasca, {S}andro
and Taibi, {D}avide
and Tosi, {D}avide",
title = "Predicting OSS Trustworthiness on the Basis of Elementary Code Assessment",
year = "2010",
isbn = "9781450300391",
address = "New York, NY, USA",
doi = "10.1145/1852786.1852834",
booktitle = "Proceedings of the 2010 ACM-IEEE International Symposium on Empirical Software Engineering and Measurement",
articleno = "36",
numpages = "4",
keywords = "static analysis, elementary code assessment (ECA) rules, trustworthiness of open-source software, source code analysis",
location = "Bolzano-Bozen, Italy",
series = "ESEM '10",
}

@InProceedings{DelBianco2010WORKSHOP,
author = "Del Bianco, {V}ieri
and Lavazza, {L}uigi
and Morasca, {S}andro
and Taibi, {D}avide
and Tosi, {D}avide",
title = "The QualiSPo Approach to OSS Product Quality Evaluation",
year = "2010",
isbn = "9781605589787",
doi = "10.1145/1833272.1833277",
abstract = "The quality of Open Source Software (OSS) is generally much debated. Some state that it is generally higher than closed-source counterparts, while others are more skeptical. In the QualiSPo project the authors addressed the problem of evaluating OSS products in a manner that is both as complete as possible and objective. To this end, a toolset and an evaluation framework are needed. The paper describes such toolset and framework, and accounts for the first evaluations that are being obtained.",
booktitle = "Proceedings of the 3rd International Workshop on Emerging Trends in Free/Libre/Open Source Software Research and Development",
pages = "23–28",
numpages = "6",
keywords = "open source software, software quality evaluation, software trustworthiness",
location = "Cape Town, South Africa",
series = "FLOSS2010",
}

@InProceedings{Morasca2010,
author="Morasca, {S}andro
and Taibi, {D}avide
and Tosi, {D}avide",
title="T-DOC: A Tool for the Automatic Generation of Testing Documentation for OSS Products",
booktitle="Open Source Software: New Horizons",
year="2010",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="200--213",
abstract="In the context of Open Source Software (OSS), the lack of project documentation is one of the most challenging problems that slows down the widespread diffusion of OSS products. The difficulty of providing up-to-date and reasonable documentation for OSS products relates to two main reasons. First, documenting development activities and technological issues is viewed as a tedious and unrewarding task. Second, data and information about an OSS project (such as source code, project plans, testing requirements, etc.) are scattered and shared via unstructured channels such as unofficial forums and mailing lists.",
isbn="978-3-642-13244-5",
DOI="10.1007/978-3-642-13244-5_16",
}

@Inbook{DelBianco2010SERMA,
author="Del Bianco, {V}ieri
and Lavazza, {L}uigi
and Morasca, {S}andro
and Taibi, {D}avide
and Tosi, {D}avide",
title="A Survey on the Importance of Some Economic Factors in the Adoption of Open Source Software",
bookTitle="Software Engineering Research, Management and Applications 2010",
year="2010",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="151--162",
abstract="Economic advantages have long been used as a key factor for promoting the adoption of Open Source Software. This paper reports on an investigation about the impact of economic factors when deciding on the adoption of Open Source Software, in the framework of a survey carried out in the QualiPSo project. The results seem to indicate that economic issues may have a remarkably lower impact than commonly believed, though people with roles more directly related to economic results and working in private companies seem to give economic factors more consideration than other Open Source Software stakeholders.",
isbn="978-3-642-13273-5",
doi="10.1007/978-3-642-13273-5_10",
}

@InProceedings{Basilico2010QUALIPSO,
author="Basilico {G}abriele
and Del Bianco, {V}ieri
and Lavazza, {L}uigi
and Morasca, {S}andro
and Taibi, {D}avide
and Tosi, {D}avide",
title="Analysis of relevant open source projects and artefacts",
year="2010",
booktitle="QualiPSo IST- FP6-IP-034763 report",
}

@article{DelBianco2011,
author="Del Bianco, {V}ieri
and Lavazza, {L}uigi
and Morasca, {S}andro
and Tosi, {D}avide",
journal="IEEE Software", 
title="A Survey on Open Source Software Trustworthiness", 
year="2011",
volume="28",
number="5",
pages="67-75",
doi="10.1109/MS.2011.93",
}

@InProceedings{Carminati2011,
author = "Carminati, {B}arbara 
and Ferrari, {E}lena 
and Morasca, {S}andro 
and Morasca, Sandro 
and Tosi, {D}avide",
title = "A Probability-Based Approach to Modeling the Risk of Unauthorized Propagation of Information in on-Line Social Networks",
year = "2011",
isbn = "9781450304665",
address = "New York, NY, USA",
doi = "10.1145/1943513.1943522",
abstract = "The unauthorized propagation of information is an important problem in the Internet, especially because of the increasing popularity of On-line Social Networks. To address this issue, many access control mechanisms have been proposed so far, but there is still a lack of techniques to evaluate the risk of unauthorized flow of information within social networks. This paper introduces a probability-based approach to modeling the likelihood that information propagates from one social network user to users who are not authorized to access it. The approach is demonstrated via an example, to show how it can be applied in practical cases.",
booktitle = "Proceedings of the First ACM Conference on Data and Application Security and Privacy",
pages = "51–62",
numpages = "12",
keywords = "information leakage, social networks, access control, privacy",
location = "San Antonio, TX, USA",
series = "CODASPY '11",
}

@article{Morasca2011,
author = "Morasca, {S}andro 
and Taibi, {D}avide
and Tosi, {D}avide",
year = "2011",
month = "04",
pages = "1-22",
title = "OSS-TMM: Guidelines for Improving the Testing Process of Open Source Software",
volume = "3",
journal = "International Journal of Open Source Software and Processes (IJOSSP)",
doi = "10.4018/jossp.2011040101",
}

@InProceedings{Basilico2011,
author = "Basilico, {G}abriele 
and Lavazza, {L}uigi 
and Morasca, {S}andro 
and Taibi, {D}avide
and Tosi, {D}avide",
year = "2011",
month = "01",
pages = "184-193",
title = "OP2A - Assessing the Quality of the Portal of Open Source Software Products.",
booktitle="International Conference on Web Information Systems and Technologies (WEBIST 2011)",
}
@InProceedings{Lavazza2012LNBIP,
author="Lavazza,  {L}uigi
and Morasca, {S}andro
and Taibi, {D}avide
and Tosi, {D}avide",
title="OP2A: How to Improve the Quality of the Web Portal of Open Source Software Products",
booktitle="Web Information Systems and Technologies",
year="2012",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="149--162",
abstract="Open Source Software (OSS) communities do not often invest in marketing strategies to promote their products in a competitive way. Even the home pages of the web portals of well-known OSS products show technicalities and details that are not relevant for a fast and effective evaluation of the product's qualities. So, final users and even developers who are interested in evaluating and potentially adopting an OSS product are often negatively impressed by the quality perception they have from the web portal of the product and turn to proprietary software solutions or fail to adopt OSS that may be useful in their activities. In this paper, we define OP2A, an evaluation model and we derive a checklist that OSS developers and web masters can use to design (or improve) their web portals with all the contents that are expected to be of interest for OSS final users. We exemplify the use of the model by applying it to the Apache Tomcat web portal and we apply the model to 47 web sites of well-known OSS products to highlight the current deficiencies that characterize these web portals.",
isbn="978-3-642-28082-5",
DOI="https://doi.org/10.1007/978-3-642-28082-5_11",
}

@book{Taibi2011,
author = "Taibi, {D}avide",
title = "Towards A Trustworthiness Model For Open Source Software: How to Evaluate Open Source Software",
year = "2011",
isbn = "3844389687",
publisher = "LAP Lambert Academic Publishing",
address = "Koln, DEU",
abstract = "Trustworthiness is one of the main aspects that contribute to the adoption/rejection of a software product. This is actually true for any product in general, but it is especially true for Open Source Software (OSS), whose trustworthiness is sometimes still regarded as not as guaranteed as that of closed source products. Trustworthiness is a major issue when people and organizations are faced with the selection and the adoption of new software. Although some ad-hoc methods have been proposed, there is not yet general agreement about which software characteristics contribute to trustworthiness. Therefore, this work focuses on defining an adequate notion of trustworthiness of Open Source products and artifacts and identifying a number of factors that influence it to help and guide both developers and users when deciding whether a given program (or library or other piece of software) is good enough and can be trusted in order to be used in an industrial or professional context. The result of this work is a set of estimation models for the perceived trustworthiness of OSS.",
}


@InProceedings{Friso2011,
author = "Friso, {C}hiara 
and Lenarduzzi, {V}alentina 
and Taibi, {D}avide
and Tosi, {D}avide",
year = "2011",
month = "09",
pages = "",
title = "How Open Source Software Products Can Support Teaching in Italian Schools",
booktitle="European Conference on Information Management and Evaluation  (ECIME-2011)",
}

@MISC{Basilicoqualipsoquality2011,
author = "Basilico, {G}abriele  
and Del Bianco, {V}ieri 
and Lavazza, {L}uigi 
and Morasca, {S}andro 
and Taibi, {D}avide
and Tosi, {D}avide",
title = "The general structure, characteristics, and evolution of OSS products and artifacts (V2). QualiPSo report. IST- FP6-IP-034763 ",
year = "2011",
}

@MISC{Qualipsoproject,
title = "Quality platform for open source software - (QualiPSo) Project - IST-FP6-IP-034763",
year = "2011",
}

@InProceedings{Lavazza2011QUALIPSO,
author="Lavazza, {L}uigi
and Morasca, {S}andro
and Taibi, {D}avide
and Tosi, {D}avide",
title="How the trustworthiness of OSS products and artifacts can be assessed and predicted",
year="2011",
booktitle="QualiPSo report IST-FP6-IP-034763 ",
}

@InProceedings{Lavazza2012ACMSYMP,
author="Lavazza, {L}uigi
and Morasca, {S}andro
and Taibi, {D}avide
and Tosi, {D}avide",
title = "An Empirical Investigation of Perceived Reliability of Open Source Java Programs",
year = "2012",
isbn = "9781450308571",
address = "New York, NY, USA",
doi = "10.1145/2245276.2231951",
abstract = "Background: Open Source Software (OSS) is used by a continuously growing number of people, both end-users and developers. The quality of OSS is thus an issue of increasing interest. Specifically, OSS stakeholders need to trust OSS with respect to a number of qualities.Objective: This paper focuses on the level of trust that OSS stakeholders have in OSS reliability, one of the most important software qualities. The goal of the work reported here is to investigate to what extent the perception of reliability by users depends on objectively measurable characteristics of software.Method: We collected subjective user evaluations of the reliability of 22 Java OSS products, and then we measured their code characteristics that are generally believed to affect the quality of software. Finally, we carried out a correlational study to predict the perceived level of reliability of OSS based on the measured characteristics of the software code.Result: We obtained a set of statistically significant quantitative models, collectively called MOSSTREL, which account for the dependence of the perceived reliability of OSS on objectively observable qualities of Java code.Conclusions: The models we obtained can be used by: 1) endusers and developers that would like to reuse existing OSS products and components, to evaluate the perceived level of reliability of these OSS products that can be expected based on the characteristics of code; 2) the developers of OSS products, who can set code quality targets based on the level of perceived reliability they want to achieve.",
booktitle = "Proceedings of the 27th Annual ACM Symposium on Applied Computing",
pages = "1109–1114",
numpages = "6",
keywords = "reliability model, open source software, object-oriented measures",
location = "Trento, Italy",
series = "SAC '12",
}

@InProceedings{Tosi2012,
author = "Tosi, {D}avide 
and Lavazza, {L}uigi 
and Morasca, {S}andro 
and Taibi, {D}avide",
title = "On the Definition of Dynamic Software Measures",
year = "2012",
isbn = "9781450310567",
doi = "10.1145/2372251.2372259",
abstract = "The quantification of several software attributes (e.g., size, complexity, cohesion, coupling) is usually carried out in a static fashion, and several hundreds of measures have been defined to this end. However, static measurement may only be an approximation for the measurement of these attributes during software use. The paper proposes a theoretical framework based on Axiomatic Approaches for the definition of sensible dynamic software measures that can dynamically capture these attributes. Dynamic measures based on this framework are defined for dynamically quantifying size and coupling. In this paper, we also compare dynamic measures of size and coupling against well-known static measures by correlating them with fault-pronenesses of four case studies.",
booktitle = "Proceedings of the ACM-IEEE International Symposium on Empirical Software Engineering and Measurement",
pages = "39–48",
numpages = "10",
keywords = "dynamic size, dynamic coupling, dynamic measures, code coverage",
location = "Lund, Sweden",
series = "ESEM '12",
}

@InProceedings{DelBianco2012,
author="Del Bianco, {V}ieri
and Lavazza, {L}uigi
and Lenarduzzi, {V}alentina
and Morasca, {S}andro
and Taibi, {D}avide
and Tosi, {D}avide",
title="A Study on OSS Marketing and Communication Strategies",
booktitle="Open Source Systems: Long-Term Sustainability",
year="2012",
pages="338--343",
isbn="978-3-642-33442-9",
DOI="10.1007/978-3-642-33442-9_31",
}

@InProceedings{Diebold2013,
author = "Diebold, {P}hilipp 
and Lampasona, {C}onstanza 
and Taibi, {D}avide",
year = "2013",
month = "10",
pages = "",
title = "Moonlighting Scrum: An Agile Method for Distributed Teams with Part-Time Developers Working during Non-Overlapping Hours",
booktitle="8th International Conference on Software Engineering Advances (ICSEA 2013)",
}

@InProceedings{Abukwaik2014,
author="Abukwaik, {H}adil
and Taibi, {D}avide
and Rombach, {D}ieter",
title="Interoperability-Related Architectural Problems and Solutions in Information Systems: A Scoping Study",
booktitle="Software Architecture",
year="2014",
publisher="Springer International Publishing",
address="Cham",
pages="308--323",
abstract="[Context] With the increasing industrial demands for seamless exchange of data and services among information systems, architectural solutions are a promising research direction which supports high levels of interoperability at early development stages. [Objectives] This research aims at identifying the architectural problems and before-release solutions of interoperability on its different levels in information systems, and exploring the interoperability metrics and research methods used to evaluate identified solutions. [Methods] We performed a scoping study in five digital libraries and descriptively analyzed the results of the selected studies. [Results] From the 22 studies included, we extracted a number of architectural interoperability problems on the technical, syntactical, semantic, and pragmatic levels. Many problems are caused by systems' heterogeneity on data representation, meaning or context. The identified solutions include standards, ontologies, wrappers, or mediators. Evaluation methods to validate solutions mostly included toy examples rather than empirical studies. [Conclusions] Progress has been made in the software architecture research area to solve interoperability problems. Nevertheless, more researches need to be spent on solutions for the higher levels of interoperability accompanied with proper empirical evaluation for their effectiveness and usefulness.",
isbn="978-3-319-09970-5",
DOI="https://doi.org/10.1007/978-3-319-09970-5_27",
}

@InProceedings{Diebold2014,
author = "Diebold, {P}hilipp 
and Dieudonn\'{e}, {L}aurent
and Taibi, {D}avide",
title = "Process Configuration Framework Tool",
year = "2014",
isbn = "9781479957958",
publisher = "IEEE Computer Society",
address = "USA",
doi = "10.1109/SEAA.2014.28",
abstract = "Organizations considering the adoption of new methods, techniques, or tools often face the problem of how to evaluate these systematically, thoroughly, and completely. In this work we present the Process Configuration Framework Tool, a web application based on the Reference Technology platform and aimed at helping organizations find empirical evidence in a specific context. These results will help decision makers to easily find existing methods, techniques, and tools in the appropriate context and make decisions based on empirical evidence.",
booktitle = "Proceedings of the 2014 40th EUROMICRO Conference on Software Engineering and Advanced Applications",
pages = "389–390",
numpages = "2",
keywords = "process improvement, process selection",
series = "SEAA '14",
}

@InProceedings{Mouaffo2014,
author = "Mouaffo, {A}drien 
and Taibi, {D}avide 
and Jamboti, {K}avyashree",
title = "Controlled Experiments Comparing Fault-Tree-Based Safety Analysis Techniques",
year = "2014",
isbn = "9781450324762",
doi = "10.1145/2601248.2601255",
abstract = "The capability to model dynamic aspects of safety-critical systems, such as sequence or stochastic dependence of events, is one important requirement for safety analysis techniques. State Event Fault Tree Analysis, Dynamic Fault Tree Analyis, and Fault Tree Analysis combined with Markov Chains Analysis have been developed to fulfill these requirements, but they are still not widely accepted and used in practice. In order to investigate the reasons behind this low usage, we conducted two controlled experiments. The goal of the experiments was to analyze and compare applicability and efficiency in State Event Fault Tree analysis versus Dynamic Fault Tree Analyis and Fault Tree Analysis combined with Markov Chains Analysis. The results of both experiments show that, notwithstanding the power of State Event Fault Tree Analysis, Dynamic Fault Tree Analyis is rated by participants as more applicable and is more efficient compared to State Event Fault Tree Analysis, which, in turn, is rated as more applicable but is less efficient than Fault Tree Analysis combined with Markov Chains Analysis. Two of the reasons investigated are the complexity of the notations used and the lack of tool support. Based on these results, we suggest strategies for enhancing State Event Fault Tree Analysis to overcome its weaknesses and increase its applicability and efficiency in modeling dynamic aspects of safety-critical systems.",
booktitle = "Proceedings of the 18th International Conference on Evaluation and Assessment in Software Engineering",
articleno = "46",
numpages = "10",
keywords = "safety-critical systems, controlled experiment, state event fault tree, fault tree analysis, Markov chain, safety-analysis, dynamic fault tree",
location = "London, England, United Kingdom",
series = "EASE '14",
}

@InProceedings{Lenarduzzi2014ICSEA,
author = "Lenarduzzi, {V}alentina 
and Taibi, {D}avide ",
year = "2014",
month = "10",
pages = "",
title = "Can Functional Size Measures Improve Effort Estimation in SCRUM?",
booktitle="The Ninth International Conference on Software Engineering Advances (ICSEA 2014)",
}

@InProceedings{Lenarduzzi2014EUROMICRO,
author="Lenarduzzi, {V}alentina
and Morasca, {S}andro 
and Taibi, {D}avide",
booktitle="2014 40th EUROMICRO Conference on Software Engineering and Advanced Applications", 
title="Estimating Software Development Effort Based on Phases", 
year="2014",
volume="",
number="",
pages="305-308",
doi="10.1109/SEAA.2014.54",
}

@InProceedings{AlTarawneh2014,
author="AlTarawneh, {R}agaad
and Steiner, {M}ax
and Taibi, {D}avide
and Humayoun, {S}hah {R}ukh
and Liggesmeyer, {P}eter",
title="Does Visualization Speed Up the Safety Analysis Process?",
booktitle="Computer Safety, Reliability, and Security",
year="2014",
publisher="Springer International Publishing",
address="Cham",
pages="431--443",
abstract="The goal of this paper is to present our experience in utilizing the power of the information visualization (InfoVis) field to accelerate the safety analysis process of Component Fault Trees (CFT) in embedded systems. For this, we designed and implemented an interactive visual tool called ESSAVis, which takes the CFT model as input and then calculates the required safety information (e.g., the information on minimal cut sets and their probabilities) that is needed to measure the safety criticality of the underlying system. ESSAVis uses this information to visualize the CFT model and allows users to interact with the produced visualization in order to extract the relevant information in a visual form. We compared ESSAVis with ESSaRel, a tool that models the CFT and represents the analysis results in textual form. We conducted a controlled user evaluation study where we invited 25 participants from different backgrounds, including 6 safety experts, to perform a set of tasks to analyze the safety aspects of a given system in both tools. We compared the results in terms of accuracy, efficiency, and level of user acceptance. The results of our study show a high acceptance ratio and higher accuracy with better performance for ESSAVis compared to the text-based tool ESSaRel. Based on the study results, we conclude that visual-based tools really help in analyzing the CFT model more accurately and efficiently. Moreover, the study opens the door to thoughts about how the power of visualization can be utilized in such domains to accelerate the safety assurance process in embedded systems.",
isbn="978-3-319-10557-4",
DOI="https://doi.org/10.1007/978-3-319-10557-4_47",
}

@InProceedings{Taibi2015ICSEA,
author = "Taibi, {D}avide
and Plociennik, {C}hristiane 
and Dieudonné, {L}aurent 
and Lenarduzzi, {V}alentina",
year = "2015",
month = "01",
pages = "125-135",
title = "A Classification Schema for Development Technologies",
volume = "8",
journal = "International Journal on Advances in Software",
booktitle="International Journal on Advances in Software",

}

@InProceedings{Lenarduzzi2015ICASD,
author="Lenarduzzi, {V}alentina
and Lunesu, {I}laria
and Matta, {M}artina
and Taibi, {D}avide",
title="Functional Size Measures and Effort Estimation in Agile Development: A Replicated Study",
booktitle="Agile Processes in Software Engineering and Extreme Programming",
year="2015",
publisher="Springer International Publishing",
address="Cham",
pages="105--116",
abstract="To help developers during the Scrum planning poker, in our previous work we ran a case study on a Moonlight Scrum process to understand if it is possible to introduce functional size metrics to improve estimation accuracy and to measure the accuracy of expert-based estimation. The results of this original study showed that expert-based estimations are more accurate than those obtained by means of models, calculated with functional size measures. To validate the results and to extend them to plain Scrum processes, we replicated the original study twice, applying an exact replication to two plain Scrum development processes. The results of this replicated study show that the accuracy of the effort estimated by the developers is very accurate and higher than that obtained through functional size measures. In particular, SiFP and IFPUG Function Points, have low predictive power and are thus not help to improve the estimation accuracy in Scrum.",
isbn="978-3-319-18612-2",
DOI=" 10.1007/978-3-319-18612-2_9",
}

@InProceedings{Taibi2015ICSEA1,
author = "Taibi, {D}avide",
year = "2015",
month = "01",
pages = "",
title = "An Empirical Investigation on the Motivations for the Adoption of Open Source Software",
isbn = "9781612084381",
booktitle="ICSEA - The Tenth International Conference on Software Engineering Advances",
}

@InProceedings{Taibi2015ICSEA2,
title = "{"}Free{"} Innovation Environments: Lessons learned from the Software Factory Initiatives",
author="Taibi, {D}avide
and Lenarduzzi, {D}alentina 
and Ahmad,{M}uhammad {O}vais
and Liukkunen, {K}ari 
and Lunesu, {I}laria 
and Matta, {M}artina  
and Fagerholm,{F}abian 
and M{\"u}nch, {J}{\"u}rgen 
and Pietinen, {S}ami 
and Tukiainen, {M}arkku  
and Fern{\'a}ndez-S{\'a}nchez, {C}arlos 
and Garbajosa,{J}uan 
and Syst{\"a}, {K}ari",
year = "2015",
booktitle = " The Tenth International Conference on Software Engineering Advances (ICSEA'15) ",
publisher = "IARIA",
}"Towards a Classification Schema for Development Technologies: an Empirical Study in the Avionic Domain",

@article{Taibi2015JOURNAL,
title = "Towards a Classification Schema for Development Technologies: an Empirical Study in the Avionic Domain",
author="Taibi, {D}avide
and Lenarduzzi, {V}alentina 
and Dieudonne, {L}aurent  
and Plociennik, {C}hristiane ",
year = "2015",
month = "8",
day = "1",
language = "English",
volume = "8",
pages = "125--135",
journal = "International Journal on Advances in Software ",
issn = "1942-2628",
number = "1-2",
}

@InProceedings{Lenarduzzi2016EUROMICRO,
author="Lenarduzzi, {V}alentina
and Taibi, {D}avide",
booktitle="2016 42th Euromicro Conference on Software Engineering and Advanced Applications (SEAA)", 
title="MVP Explained: A Systematic Mapping Study on the Definitions of Minimal Viable Product", 
year="2016",
volume="",
number="",
pages="112-119",
doi="10.1109/SEAA.2016.56",
}

@InProceedings{Aldawood2016,
author="Aldawood, {S}arah
and Fowley, {F}rank
and Pahl, {C}laus
and Taibi, {D}avide 
and Liu, {X}iaodong",
booktitle="2016 IEEE 4th International Conference on Future Internet of Things and Cloud Workshops (FiCloudW)",
title="A Coordination-Based Brokerage Architecture for Multi-cloud Resource Markets",
year="2016",
volume="",
number="",
pages="7-14",
doi="10.1109/W-FiCloud.2016.19",
}

@InProceedings{Taibi2016ICASD,
author="Taibi, {D}avide
and Janes, {A}ndrea
and Lenarduzzi, {V}alentina",
title="Towards a Lean Approach to Reduce Code Smells Injection: An Empirical Study",
booktitle="Agile Processes, in Software Engineering, and Extreme Programming",
year="2016",
publisher="Springer International Publishing",
address="Cham",
pages="300--304",
abstract="Software Quality Assurance is a complex and time-expensive task. In this study we want to observe how agile developers react to just-in-time metrics about the code smells they introduce, and how the metrics influence the quality of the output.",
isbn="978-3-319-33515-5",
DOI="https://doi.org/10.1007/978-3-319-33515-5_30",
}

@article{Taibi2016JOURNAL,
author = "Taibi, {D}avide",
year = "2016",
month = "06",
pages = "",
title = "Can Opinion Mining Techniques Help to Select Open Source Software?",
volume = "1",
journal = "International Journal of Computer\& Software Engineering",
doi = "10.15344/2456-4451/2016/104",
}

@InProceedings{Lavazza2016,
author="Lavazza, {L}uigi 
and Lenarduzzi, {V}alentina 
and Taibi, {D}avide ",
booktitle="2016 Joint Conference of the International Workshop on Software Measurement and the International Conference on Software Process and Product Measurement (IWSM-MENSURA)",
title="Towards Component-Aware Function Point Measurement",
year="2016",
pages="35-44",
doi="10.1109/IWSM-Mensura.2016.017",
}

@article{Taibi2017IEEE,
author="Taibi, {D}avide
and Lenarduzzi, {V}alentina
and Pahl, {C}laus",
journal="IEEE Cloud Computing", 
title="Processes, Motivations, and Issues for Migrating to Microservices Architectures: An Empirical Investigation", 
year="2017",
volume="4",
number="5",
pages="22-32",
doi="10.1109/MCC.2017.4250931",
}

@article{TAIBI2017IST,
title = "How developers perceive smells in source code: A replicated study",
journal = "Information and Software Technology",
volume = "92",
pages = "223 - 235",
year = "2017",
issn = "0950-5849",
doi = "https://doi.org/10.1016/j.infsof.2017.08.008",
author="Taibi, {D}avide
and Janes, {A}ndrea 
and Lenarduzzi, {V}alentina",
keywords = "Software maintenance, Code smells, Bad smells, Antipatterns, Refactoring",
abstract = "Context. In recent years, smells, also referred to as bad smells, have gained popularity among developers. However, it is still not clear how harmful they are perceived from the developers’ point of view. Many developers talk about them, but only few know what they really are, and even fewer really take care of them in their source code. Objective. The goal of this work is to understand the perceived criticality of code smells both in theory, when reading their description, and in practice. Method. We executed an empirical study as a differentiated external replication of two previous studies. The studies were conducted as surveys involving only highly experienced developers (63 in the first study and 41 in the second one). First the perceived criticality was analyzed by proposing the description of the smells, then different pieces of code infected by the smells were proposed, and finally their ability to identify the smells in the analyzed code was tested. Results. According to our knowledge, this is the largest study so far investigating the perception of code smells with professional software developers. The results show that developers are very concerned about code smells in theory, nearly always considering them as harmful or very harmful (17 out of 23 smells). However, when they were asked to analyze an infected piece of code, only few infected classes were considered harmful and even fewer were considered harmful because of the smell. Conclusions. The results confirm our initial hypotheses that code smells are perceived as more critical in theory but not as critical in practice.",
}

@InProceedings{Lenarduzzi2017ICSE,
author="Lenarduzzi, {V}alentina
and Sillitti, {A}lberto
and Taibi, {D}avide",
booktitle="2017 IEEE/ACM 39th International Conference on Software Engineering Companion (ICSE-C)", 
title="Analyzing Forty Years of Software Maintenance Models", 
year="2017",
volume="",
number="",
pages="146-148",
doi="10.1109/ICSE-C.2017.122",
}

@InProceedings{Taibi2017ICASDA,
author="Taibi, {D}avide
and Lenarduzzi, {V}alentina
and Janes, {A}ndrea
and Liukkunen, {K}ari
and Ahmad, {M}uhammad {O}vais",
title="Comparing Requirements Decomposition Within the Scrum, Scrum with Kanban, XP, and Banana Development Processes",
booktitle="Agile Processes in Software Engineering and Extreme Programming",
year="2017",
publisher="Springer International Publishing",
address="Cham",
pages="68--83",
abstract="Context: Eliciting requirements from customers is a complex task. In Agile processes, the customer talks directly with the development team and often reports requirements in an unstructured way. The requirements elicitation process is up to the developers, who split it into user stories by means of different techniques. Objective: We aim to compare the requirements decomposition process of an unstructured process and three Agile processes, namely XP, Scrum, and Scrum with Kanban. Method: We conducted a multiple case study with a replication design, based on the project idea of an entrepreneur, a designer with no experience in software development. Four teams developed the project independently, using four different development processes. The requirements were elicited by the teams from the entrepreneur, who acted as product owner and was available to talk with the four groups during the project. Results: The teams decomposed the requirements using different techniques, based on the selected development process. Conclusion: Scrum with Kanban and XP resulted in the most effective processes from different points of view. Unexpectedly, decomposition techniques commonly adopted in traditional processes are still used in Agile processes, which may reduce project agility and performance. Therefore, we believe that decomposition techniques need to be addressed to a greater extent, both from the practitioners' and the research points of view.",
isbn="978-3-319-57633-6",
DOI="10.1007/978-3-319-57633-6_5",
}

@InProceedings{Taibi2017XP,
author="Taibi, {D}avide
and Lenarduzzi, {V}alentina
and Pahl, {C}laus 
and Janes, {A}ndrea",
title = "Microservices in Agile Software Development: A Workshop-Based Study into Issues, Advantages, and Disadvantages",
year = "2017",
doi = "10.1145/3120459.3120483",
abstract = "In the last years, cloud-native architectures have emerged as a target platform for the deployment of microservice architectures. The migration of existing monoliths into cloud-native applications is still in the early phase, and only few companies already started their migrations. Therefore, success and failure stories about different approaches are not available in the literature. This context connects also to the recently discussed DevOps context where development and continuous deployment are closely linked.",
booktitle = "Proceedings of the XP2017 Scientific Workshops",
articleno = "23",
numpages = "5",
keywords = "cloud software, SOA, microservices, software architecture",
location = "Cologne, Germany",
series = "XP '17",
}

@InProceedings{Taibi2017ICASDB,
author="Taibi, {D}avide 
and Lenarduzzi, {V}alentina 
and Ahmad, {M}uhammad {O}vais 
and Liukkunen, {K}ari",
title = "Comparing Communication Effort within the Scrum, Scrum with Kanban, XP, and Banana Development Processes",
year = "2017",
isbn = "9781450348041",
doi = "10.1145/3084226.3084270",
abstract = "[Context]: Communication plays an important role in any development process. However, communication overhead has been rarely compared among development processes. [Objective]: The goal of this work is to compare the communication overhead and the different channels applied in three agile processes (XP, Scrum, Scrum with Kanban) and in an unstructured process. [Method]: We designed an empirical study asking four teams to develop the same application with the four development processes, and we compare the communication overhead among them. [Results]: As expected, face-to-face communication is most frequently employed in the teams. Scrum with Kanban turned out to be the process that requires the least communication. Unexpectedly, despite requiring much more time to develop the same application, the unstructured process required comparable communication overhead (25% of the total development time) as the agile processes.",
booktitle = "Proceedings of the 21st International Conference on Evaluation and Assessment in Software Engineering",
pages = "258–263",
numpages = "6",
keywords = "Case Study, Agile Processes, Empirical Software Engineering, Communication",
location = "Karlskrona, Sweden",
series = "EASE'17",
}

@InProceedings{Lenarduzzi2017ECISME,
author= "Lenarduzzi, {V}alentina
and Stan, {A}lexandru {C}hristian
and Taibi, {D}avide 
and Tosi, {D}avide  
and Venters, {G}ustavs ",
booktitle="11th European Conference on Information Systems Management (ECISM2017)",
title="A Dynamical Quality Model to Continuously Monitor Software Maintenance",
year="2017",
volume="",
number="",
}

@InProceedings{Taibi2017EASE,
author="Taibi, {D}avide 
and Lenarduzzi, {V}alentina 
and Diebold, {P}hilipp
and Lunesu, {I}laria",
title = "Operationalizing the Experience Factory for Effort Estimation in Agile Processes",
year = "2017",
doi = "10.1145/3084226.3084240",
abstract = "[Background] The effort required to systematically collect historical data is not always allocable in agile processes and historical data management is usually delegated to the developers' experience, who need to remember previous project details. However, even if well trained, developers cannot precisely remember a huge number of details, resulting in wrong decisions being made during the development process. [Aims] The goal of this paper is to operationalize the Experience Factory in an agile way, i.e., defining a strategy for collecting historical project data using an agile approach. [Method] We provide a mechanism for understanding whether a measure must be collected or not, based on the Return on Invested Time (ROIT). In order to validate this approach, we instantiated the factory with an exploratory case study, comparing four projects that did not use our approach with one project that used it after 12 weeks out of 37 and two projects that used it from the beginning. [Results] The proposed approach helps developers to constantly improve their estimation accuracy with a very positive ROIT of the collected measure. [Conclusions] From this first experience, we can conclude that the Experience Factory can be applied effectively to agile processes, supporting developers in improving their performance and reducing potential decision mistakes.",
booktitle = "Proceedings of the 21st International Conference on Evaluation and Assessment in Software Engineering",
pages = "31–40",
numpages = "10",
keywords = "Agile Software Development, Experience Factory, Knowledge Management",
location = "Karlskrona, Sweden",
series = "EASE'17",
}

@INPROCEEDINGS{Tosi2017ECISME,
author="Tosi, {D}avide 
and Lenarduzzi,{V}alentina 
and Morasca, {S}andro 
and Taibi, {D}avide ",
booktitle="11th European Conference on Information Systems Management (ECISM2017)",
title="Experimenting Traditional and Modern Reliability Models in a 3-Years European Software Project",
year="2017",
}

@InProceedings{Pahl2017,
author = "Pahl, {C}laus 
and Taibi, {D}avide 
and Janes, {A}ndrea 
and Lenarduzzi, {V}alentina",
title = "Session Details: Microservices Architectural Styles: Agile or Not Agile? (WMSA17), First International Workshop on Microservices for Agile Software Development",
year = "2017",
doi = "10.1145/3257321",
booktitle = "Proceedings of the XP2017 Scientific Workshops",
numpages = "1",
location = "Cologne, Germany",
series = "XP '17",
}

@InProceedings{Lenarduzzi2017ICSE2,
author = "Lenarduzzi, {V}alentina
and Sillitti, {A}lberto 
and Taibi, {D}avide",
title = "Analyzing Forty Years of Software Maintenance Models",
year = "2017",
isbn = "9781538615898",
publisher = "IEEE Press",
doi = "10.1109/ICSE-C.2017.122",
booktitle = "Proceedings of the 39th International Conference on Software Engineering Companion",
pages = "146–148",
numpages = "3",
keywords = "component, software maintenance, systematic literature review",
location = "Buenos Aires, Argentina",
series = "ICSE-C '17",
}


@InProceedings{Taibi2018closer18,
author="Taibi, {D}avide 
and Lenarduzzi, {V}alentina
and Pahl, {C}laus",
title="Architectural Patterns for Microservices: A Systematic Mapping Study",
booktitle="Proceedings of the 8th International Conference on Cloud Computing and Services Science - Volume 1: CLOSER,",
year="2018",
pages="221-232",
publisher="SciTePress",
organization="INSTICC",
doi="10.5220/0006798302210232",
isbn="978-989-758-295-0",
}

@article{Taibi2018IEEE,
author="Taibi, {D}avide 
and Lenarduzzi, {V}alentina",
journal="IEEE Software", 
title="On the Definition of Microservice Bad Smells", 
year="2018",
volume="35",
number="3",
pages="56-62",
doi="10.1109/MS.2018.2141031"
}

@InProceedings{Lenarduzzi2019SEDA,
author="Lenarduzzi, Valentina
and Sillitti, {A}lberto
and Taibi, {D}avide",
title="A Survey on Code Analysis Tools for Software Maintenance Prediction",
booktitle="Proceedings of 6th International Conference in Software Engineering for Defence Applications",
year="2019",
publisher="Springer International Publishing",
address="Cham",
pages="165--175",
abstract="Software maintenance is a widely studied area of software engineering that it is particularly important in safety-critical and mission-critical applications where defects may have huge impact and code needs to be checked carefully through the analysis of data collected using a number of tools developed to investigate specific aspects. However, such tools are often not available to practitioners preventing them from applying the most recent and advanced approaches to industrial projects. This paper is an initial investigation about code analysis tools used to perform research studies on software maintenance prediction. We focus on the identification of tools that are available and can be used by practitioners to apply the same maintenance approaches described in published academic papers.",
isbn="978-3-030-14687-0",
DOI="https://doi.org/10.1007/978-3-030-14687-0_15",
}

@article{Sbai2018,
title = "Exploring information from OSS repositories and platforms to support OSS selection decisions",
journal = "Information and Software Technology",
volume = "104",
pages = "104 - 108",
year = "2018",
issn = "0950-5849",
doi = "https://doi.org/10.1016/j.infsof.2018.07.009",
author = "Sbai, {N}esrine 
and Lenarduzzi, {V}alentina  
and Taibi, {D}avide 
and Sassi, {S}ihem {B}en 
and Ghezala, {H}enda {H}ajjami {B}en ",
abstract = "Context
Individuals and organizations are increasingly adopting Open Source Software (OSS) for the benefits it provides. Although the OSS evaluation process and the information it requires are nowadays well known, users still have problems finding the right information and are not supported by any decision support system.
Objective
The aim of this study is to bridge the gap between OSS adoption models, especially with the aim of supporting users in evaluating the OSS they are planning to select.
Method
To reach this aim, we studied the processes and the information considered by the major OSS assessment models. Then we carried out a case study to identify which information can be automatically retrieved from the main OSS platforms, namely GitHub, SonarCloud, and StackExchange. Finally, we characterized the maturity of the projects available on these three platforms.
Results
Projects available on the three platforms are commonly old, stable, and mature ones. Moreover, thanks to the API provided, we were able to extract most of the information not commonly accessible from the main website.
Conclusions
Our results confirm that it is possible to develop a decision support system based on these three platforms, and that is also possible to evaluate both the quality and the maturity of the projects available there."
}

@InProceedings{Ahmad2018,
author = "Ahmad, {M}uhammad {O}vais 
and Lenarduzzi, {V}alentina 
and Oivo, {M}arkku 
and Taibi, {D}avide ",
year = "2018",
month = "09",
pages = "",
title = "Lessons Learned on Communication Channels and Practices in Agile Software Development",
doi = "10.15439/2018F72",
booktitle="2nd International Conference on Lean and Agile Software Development (LASD'18)",
}

@InProceedings{Borgianni2018,
author = "Borgianni, {Y}uri 
and Lenarduzzi, {V}alentina 
and Rotini, {F}ederico 
and Taibi, {D}avide ",
year = "2018",
month = "02",
pages = "",
title = "Bringing stimulated ideation in a web environment: students’ evaluations of a basic software release",
booktitle="The Fifth International Conference on Design Creativity (ICDC2018).",
}

@InProceedings{Lenarduzzi2018euromicro,
author = "Lenarduzzi, {V}alentina 
and Taibi, {D}avide ",
year = "2018",
month = "08",
pages = "",
title = "Microservices, Continuous Architecture, and Technical Debt Interest: An Empirical Study",
booktitle="Euromicro SEAA",
}

@conference{Rosati2018closer18,
author="Rosati, {P}ierangelo  
and Fowley, {F}rank  
and Pahl, {C}laus 
and Taibi, {D}avide 
and Lynn, {T}heo",
title="Making the Cloud Work for Software Producers: Linking Architecture, Operating Cost and Revenue",
booktitle="Proceedings of the 8th International Conference on Cloud Computing and Services Science - Volume 1: CLOSER,",
year="2018",
pages="364-375",
publisher="SciTePress",
organization="INSTICC",
doi="10.5220/0006679303640375",
isbn="978-989-758-295-0",
}

@InProceedings{Hakli2018,
author="Häkli,{A}leksi
and Taibi, {D}avide 
and Syst{\"a}, {K}ari",
booktitle="2018 IEEE/ACM International Conference on Utility and Cloud Computing Companion (UCC Companion)", 
title="Towards Cloud Native Continuous Delivery: An Industrial Experience Report", 
year="2018",
volume="",
number="",
pages="314-320",
doi="10.1109/UCC-Companion.2018.00074"
}

@InProceedings{Lenarduzzi2018,
author="Lenarduzzi, {V}alentina
and Stan, {A}lexandru {C}ristian
and Taibi, {D}avide
and Venters, {G}ustavs
and Windegger, {M}arkus",
title="Prioritizing Corrective Maintenance Activities for Android Applications: An Industrial Case Study on Android Crash Reports",
booktitle="Software Quality: Methods and Tools for Better Software and Systems",
year="2018",
publisher="Springer International Publishing",
address="Cham",
pages="133--143",
abstract="Context: Unhandled code exceptions are often the cause of a drop in the number of users. In the highly competitive market of Android apps, users commonly stop using applications when they find some problem generated by unhandled exceptions. This is often reflected in a negative comment in the Google Play Store and developers are usually not able to reproduce the issue reported by the end users because of a lack of information.",
isbn="978-3-319-71440-0",
DOI="https://doi.org/10.1007/978-3-319-71440-0_8",
}

@InProceedings{Taibi2018ICASD,
author = "Taibi, {D}avide  
and Mandi\'{c}, {V}ladimir 
and Jabangwe, {R}onald 
and Giallorenzo, {S}averio",
title = "Session Details: MADE'18: Second International Workshop on Microservices: Agile and DevOps Experience",
year = "2018",
publisher = "Association for Computing Machinery",
doi = "10.1145/3329526",
booktitle = "Proceedings of the 19th International Conference on Agile Software Development: Companion",
numpages = "1",
location = "Porto, Portugal",
series = "XP '18"
}

@InProceedings{Lenarduzzi2019IEEEACM,
author="Lenarduzzi, {V}alentina
and Saarim{\"a}ki, {N}yyti 
and Taibi, {D}avide",
booktitle="2019 IEEE/ACM International Conference on Technical Debt (TechDebt)", 
title="On the Diffuseness of Code Technical Debt in Java Projects of the Apache Ecosystem", 
year="2019",
pages="98-107",
doi="10.1109/TechDebt.2019.00028",
}

@InProceedings{Azadi2019,
author="Azadi, {U}mberto
and Arcelli Fontana, {F}rancesca 
and Taibi, {D}avide",
booktitle="2019 IEEE/ACM International Conference on Technical Debt (TechDebt)", 
title="Architectural Smells Detected by Tools: a Catalogue Proposal", 
year="2019",
pages="88-97",
doi="10.1109/TechDebt.2019.00027",
}

@InProceedings{Lenarduzzi2019PROMISE,
author="Lenarduzzi, {V}alentina 
    and Saarim{\"a}ki, {N}yyti 
    and Taibi, {D}avide",
title = "The Technical Debt Dataset",
year = "2019",
doi = "10.1145/3345629.3345630",
booktitle = "Proceedings of the Fifteenth International Conference on Predictive Models and Data Analytics in Software Engineering",
pages = "2–11",
numpages = "10",
keywords = "Technical Debt, SZZ, Mining Software Repository, Dataset, SonarQube, Software Quality, Faults",
location = "Recife, Brazil",
series = "PROMISE'19",
}

@Inbook{Taibi2020MSE,
author="Taibi, {D}avide
and Lenarduzzi, {V}alentina
and Pahl, {C}laus",
title="Microservices Anti-patterns: A Taxonomy",
bookTitle="Microservices: Science and Engineering",
year="2020",
publisher="Springer International Publishing",
address="Cham",
pages="111--128",
abstract="Several companies are rearchitecting their monolithic information systems with microservices. However, many companies migrate to microservices without experience, mainly learning how to migrate from books or from practitioners' blogs. Because of the novelty of the topic, practitioners and consultancies are learning by doing how to migrate, thus facing several issues but also several benefits. In this chapter, we introduce a catalog and a taxonomy of the most common microservices anti-patterns in order to identify common problems. Our anti-pattern catalog is based on the experience summarized by different practitioners we interviewed in the last 3 years. We identified a taxonomy of 20 anti-patterns, including organizational (team oriented and technology/tool oriented) anti-patterns and technical (internal and communication) anti-patterns. The results can be useful to practitioners to avoid experiencing the same difficult situations in the systems they develop. Moreover, researchers can benefit from this catalog and further validate the harmfulness of the anti-patterns identified.",
doi="10.1007/978-3-030-31646-4_5",
}

@InProceedings{Tonelli2019,
author= "Tonelli, {R}oberto
and Lunesu, {M}aria {I}laria
and Pinna, {A}ndrea 
and Taibi, {D}avide
and Marchesi, {M}ichele",
booktitle="2019 IEEE International Workshop on Blockchain Oriented Software Engineering (IWBOSE)", 
title="Implementing a Microservices System with Blockchain Smart Contracts", 
year="2019",
pages="22-31",
doi="10.1109/IWBOSE.2019.8666520",
}

@conference{Taibi2019closer19,
author="Taibi, {D}avide
and Syst{\"a}, {K}ari",
title="From Monolithic Systems to Microservices: A Decomposition Framework based on Process Mining",
booktitle="Proceedings of the 9th International Conference on Cloud Computing and Services Science - Volume 1: CLOSER,",
year="2019",
pages="153-164",
publisher="SciTePress",
organization="INSTICC",
doi="10.5220/0007755901530164",
}

@InProceedings{Lenarduzzi2019MALTESQUE,
author ="Lenarduzzi, {V}alentina 
and Martini, {A}ntonio 
and Taibi, {D}avide 
and Tamburri, {D}amian {A}ndrew",
title = "Towards Surgically-Precise Technical Debt Estimation: Early Results and Research Roadmap",
year = "2019",
isbn = "9781450368551",
publisher = "Association for Computing Machinery",
address = "New York, NY, USA",
doi = "10.1145/3340482.3342747",
abstract = "The concept of technical debt has been explored from many perspectives but its precise estimation is still under heavy empirical and experimental inquiry. We aim to understand whether, by harnessing approximate, data-driven, machine-learning approaches it is possible to improve the current techniques for technical debt estimation, as represented by a top industry quality analysis tool such as SonarQube. For the sake of simplicity, we focus on relatively simple regression modelling techniques and apply them to modelling the additional project cost connected to the sub-optimal conditions existing in the projects under study. Our results shows that current techniques can be improved towards a more precise estimation of technical debt and the case study shows promising results towards the identification of more accurate estimation of technical debt.",
booktitle = "Proceedings of the 3rd ACM SIGSOFT International Workshop on Machine Learning Techniques for Software Quality Evaluation",
pages = "37–42",
numpages = "6",
keywords = "Empirical Study, Technical Debt, Machine Learning",
location = "Tallinn, Estonia",
series = "MaLTeSQuE 2019"
}


@article{ArcelliFontana2019,
title = "Are architectural smells independent from code smells? An empirical study",
journal = "Journal of Systems and Software",
volume = "154",
pages = "139 - 156",
year = "2019",
issn = "0164-1212",
doi = "https://doi.org/10.1016/j.jss.2019.04.066",
author = "Arcelli Fontana, {F}rancesca
and Lenarduzzi, {V}alentina 
and Roveda, {R}iccardo
and Taibi, {D}avide ",
}

@InProceedings{Taibi2019CCSS,
author="Taibi, {D}avide
and Lenarduzzi, {V}alentina
and Pahl, {C}laus",
title="Continuous Architecting with Microservices and DevOps: A Systematic Mapping Study",
booktitle="Cloud Computing and Services Science",
year="2019",
publisher="Springer International Publishing",
address="Cham",
pages="126--151",
abstract="Context: Several companies are migrating their information systems into the Cloud. Microservices and DevOps are two of the most common adopted technologies. However, there is still a lack of understanding how to adopt a microservice-based architectural style and which tools and technique to use in a continuous architecting pipeline.",
isbn="978-3-030-29193-8",
DOI="10.1007/978-3-030-29193-8_7",
}


@InProceedings{Lenarduzzi2019ACMIEEE,
author="Lenarduzzi, {V}alentina 
and Orava, {T}eemu 
and Saarim{\"a}ki, {N}yyti 
and Syst{\"a}, {K}ari
and Taibi, {D}avide ",
booktitle="2019 ACM/IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM)", 
title="An Empirical Study on Technical Debt in a Finnish SME", 
year="2019",
volume="",
number="",
pages="1-6",
doi="10.1109/ESEM.2019.8870169"
}

@unknown{Taibi2019,
author = "Taibi, {D}avide 
and Auer, {F}lorian 
and Lenarduzzi, {V}alentina 
and Felderer, {M}ichael",
year = "2019",
month = "09",
pages = "",
title = "From Monolithic Systems to Microservices: An Assessment Framework",
}

@misc{Taibi2019monolithic,
title="From Monolithic Systems to Microservices: An Assessment Framework", 
author= "Taibi,{D}avide 
and Auer, {F}lorian  
and Lenarduzzi, {V}alentina 
and Felderer,  {M}ichael",
year="2019",
eprint="1909.08933",
archivePrefix="arXiv",
primaryClass="cs.SE"
}

@InProceedings{Counsell2019,
author="Counsell, {S}teve
and Arzoky, {M}ahir
and Destefanis, {G}iuseppe
and Taibi, {D}avide ",
booktitle="2019 ACM/IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM)", 
title="On the Relationship Between Coupling and Refactoring: An Empirical Viewpoint", 
year="2019",
volume="",
number="",
pages="1-6",
doi="10.1109/ESEM.2019.8870191"
}

@unknown{Imranur2019,
author = "Imranur, {M}ohammad {R}ahman
and Panichella, {S}ebastiano 
and Taibi, {D}avide ",
year = "2019",
month = "09",
pages = "",
booktitle="Joint Proceedings of the Summer School on Software Maintenance and Evolution", 
title = "A curated Dataset of Microservices-Based Systems"
}

@conference {Heinisuo2019,
title = "Asterism: A Decentralized File Sharing for Mobile Devices",
booktitle = "The Seventh IEEE International Conference on Mobile Cloud Computing, Services, and Engineering (IEEE Mobile Cloud)",
year = "2019",
month = "04/2019",
publisher = "IEEE",
organization = "IEEE",
address = "San Francisco East Bay",
author ="Heinisuo, {O}lli-Pekka 
and Lenarduzzi, {V}alentina 
and Taibi, {D}avide ",
}

@InProceedings{Rosati2019,
author="Rosati, {P}ierangelo
and Fowley, {F}rank
and Pahl, {C}laus
and Taibi, {D}avide
and Lynn, {T}heo",
title="Right Scaling for Right Pricing: A Case Study on Total Cost of Ownership Measurement for Cloud Migration",
booktitle="Cloud Computing and Services Science",
year="2019",
publisher="Springer International Publishing",
address="Cham",
pages="190--214",
abstract="Cloud computing promises traditional enterprises and independent software vendors a myriad of advantages over on-premise installations including cost, operational and organizational efficiencies. The decision to migrate software configured for on-premise delivery to the cloud requires careful technical consideration and planning. In this chapter, we discuss the impact of right-scaling on the cost modelling for migration decision making and price setting of software for commercial resale. An integrated process is presented for measuring total cost of ownership, taking in to account IaaS/PaaS resource consumption based on forecast SaaS usage levels. The process is illustrated with a real world case study.",
isbn="978-3-030-29193-8",
DOI="10.1007/978-3-030-29193-8_10",
}

@InProceedings{Lenarduzzi2020IEEE,
author="Lenarduzzi, {V}alentina 
and Lomio, {F}rancesco
and Huttunen, {H}eikki 
and Taibi, {D}avide",
booktitle="2020 IEEE 27th International Conference on Software Analysis, Evolution and Reengineering (SANER)", 
title="Are SonarQube Rules Inducing Bugs?", 
year="2020",
volume="",
number="",
pages="501-511",
doi="10.1109/SANER48275.2020.9054821"
}


@article{Lenarduzzi2021,
title = "A systematic literature review on Technical Debt prioritization: Strategies, processes, factors, and tools",
journal = "Journal of Systems and Software",
volume = "171",
pages = "110827",
year = "2021",
issn = "0164-1212",
doi = "https://doi.org/10.1016/j.jss.2020.110827",
author="Lenarduzzi, {V}alentina 
and Besker, {T}erese 
and Taibi, {D}avide 
and Martini, {A}ntonio 
and Arcelli Fontana, {F}rancesca ",
keywords = "Technical Debt, Technical Debt prioritization, Systematic Literature Review",
}

@conference{Taibi2020closer2020,
author="Taibi, {D}avide
and El Ioini, {N}abil 
and Pahll {C}laus
and Niederkofler, {J}an {R}aphael {S}chmid",
title="Patterns for Serverless Functions (Function-as-a-Service): A Multivocal Literature Review",
booktitle="Proceedings of the 10th International Conference on Cloud Computing and Services Science - Volume 1: CLOSER,",
year="2020",
pages="181-192",
publisher="SciTePress",
organization="INSTICC",
doi="10.5220/0009578501810192",
isbn="978-989-758-424-4",
}


@article{Lenarduzzi2020JOURNALA,
title = "Does migrate a monolithic system to microservices decrease the technical debt?",
journal = "Journal of Systems and Software",
volume = "169",
pages = "110710",
year = "2020",
issn = "0164-1212",
doi = "https://doi.org/10.1016/j.jss.2020.110710",
author="Lenarduzzi, {V}alentina 
and Lomio, {N}Francesco 
and Saarim{\"a}ki, {N}yyti 
and Taibi, {D}avide",
keywords = "Technical debt, Architectural debt, Code quality, Microservices, Refactoring",
}

@article{Lenarduzzi2020JOURNALB,
title = "Some SonarQube issues have a significant but small effect on faults and changes. A large-scale empirical study",
journal = "Journal of Systems and Software",
volume = "170",
pages = "110750",
year = "2020",
issn = "0164-1212",
doi = "https://doi.org/10.1016/j.jss.2020.110750",
author="Lenarduzzi, {V}alentina  
and Saarim{\"a}ki, {N}yyti 
and Taibi, {D}avide",
keywords = "Change-proneness, Fault-proneness, SonarQube, Empirical study",
}

@InProceedings{Nupponen2020,
author="Nupponen, {J}ussi
and Taibi, {D}avide",
booktitle="2020 IEEE International Conference on Software Architecture Companion (ICSA-C)", 
title="Serverless: What it Is, What to Do and What Not to Do", 
year="2020",
volume="",
number="",
pages="49-50",
doi="10.1109/ICSA-C50368.2020.00016"
}

@InProceedings{Pigazzini2020,
author ="Pigazzini, {I}laria 
and Arcelli Fontana, {F}rancesca
and Lenarduzzi, {V}alentina 
and Taibi, {D}avide",
title = "Towards Microservice Smells Detection",
booktitle ="Proceedings of the 3rd International Conference on Technical Debt",
year = "2020",
isbn = "9781450379601",
address = "New York, NY, USA",
doi = "10.1145/3387906.3388625",
pages = "92–97",
numpages = "6",
keywords = "microservices, microservice bad smells detection, anti-patterns",
location = "Seoul, Republic of Korea",
series = "TechDebt '20"
}

@InProceedings{Lenarduzzi2020ACMIEEE,
author = "Lenarduzzi, {V}alentina 
and Mandi\'{c}, {V}ladimir 
and Katin, {A}ndrej 
and Taibi, {D}avide ",
title = "How Long Do Junior Developers Take to Remove Technical Debt Items?",
year = "2020",
isbn = "9781450375801",
doi = "10.1145/3382494.3422169",
abstract = "Background. Software engineering is one of the engineering fields with the highest inflow of junior engineers. Tools that utilize source code analysis to provide feedback on internal software quality, i.e. Technical Debt (TD), are valuable to junior developers who can learn and improve their coding skills with minimal consultations with senior colleagues. Objective. We aim at understating which SonarQube TD items junior developers prioritize during the refactoring and how long they take to refactor them. Method. We designed a case study with replicated design and we conducted it with 185 junior developers in two countries, that developed 23 projects with different programming languages and architectures. Results. Junior developers focus homogeneously on different types of TD items. Moreover, they can refactor items in a fraction of the estimated time, never spending more than 50% of the time estimated by SonarQube. Conclusion. Junior Developers appreciate the usage of SonarQube and considered as a useful tool. Companies might ask junior developers to quickly clean their code.",
booktitle = "Proceedings of the 14th ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM)",
articleno = "30",
numpages = "6",
keywords = "Remediation Time, Empirical Study, Technical Debt, Junior Developers, SonarQube",
location = "Bari, Italy",
series = "ESEM '20",
}

@article{LENARDUZZI2021110806,
title = "Does code quality affect pull request acceptance? An empirical study",
journal = "Journal of Systems and Software",
volume = "171",
pages = "110806",
year = "2021",
issn = "0164-1212",
doi = "https://doi.org/10.1016/j.jss.2020.110806",
author= "Valentina, {L}enarduzzi 
and Nikkola, {V}illi 
and Saarim{\"a}ki, {N}yyti 
and Taibi, {D}avide ",
keywords = "Pull requests, PMD rules, Machine learning",
abstract = "Background
Pull requests are a common practice for making contributions and reviewing them in both open-source and industrial contexts.
Objective
Our goal is to understand whether quality flaws such as code smells, anti-patterns, security vulnerabilities, and coding style violations in a pull request’s code affect the chance of its acceptance when reviewed by a maintainer of the project.
Method
We conducted a case study among 28 Java open-source projects, analyzing the presence of 4.7 M code quality flaws in 36 K pull requests. We analyzed further correlations by applying logistic regression and six machine learning techniques. Moreover, we manually validated 10% of the pull requests to get further qualitative insights on the importance of quality issues in cases of acceptance and rejection.
Results
Unexpectedly, quality flaws measured by PMD turned out not to affect the acceptance of a pull request at all. As suggested by other works, other factors such as the reputation of the maintainer and the importance of the delivered feature might be more important than other qualities in terms of pull request acceptance.
Conclusions
. Researchers have already investigated the influence of the developers’ reputation and the pull request acceptance. This is the first work investigating code style violations and specifically PMD rules. We recommend that researchers further investigate this topic to understand if different measures or different tools could provide some useful measures."
}

@InProceedings{Taibi2020CLOSER,
author="Taibi, {D}avide
and Syst{\"a}, {K}ari",
title="A Decomposition and Metric-Based Evaluation Framework for Microservices",
booktitle="Cloud Computing and Services Science",
year="2020",
publisher="Springer International Publishing",
address="Cham",
pages="133--149",
abstract="Migrating from monolithic systems into microservice is a very complex task. Companies are commonly decomposing the monolithic system manually, analyzing dependencies of the monolith and then assessing different decomposition options. The goal of our work is two-folded: 1) we provide a microservice measurement framework to objectively evaluate and compare the quality of microservices-based systems; 2) we propose a decomposition system based on business process mining. The microservice measurement framework can be applied independently from the decomposition process adopted, but is also useful to continuously evaluate the architectural evolution of a system. Results show that the decomposition framework helps companies to easily identify the different decomposition options. The measurement framework can help to decrease the subjectivity of the decision between different decomposition options and to evaluate architectural erosion in existing systems.",
isbn="978-3-030-49432-2"
}

@InProceedings{Lomio2020,
author = "Lomio, {F}rancesco 
and Baselga, {D}iego {M}art\'{\i}nez 
and Moreschini, {S}ergio 
and Huttunen, {H}eikki 
and Taibi, {D}avide",
title = "RARE: A Labeled Dataset for Cloud-Native Memory Anomalies",
year = "2020",
isbn = "9781450381246",
doi = "10.1145/3416505.3423560",
abstract = "Anomaly detection has been attracting interest from both the industry and the research community for many years, as the number of published papers and services adopted grew exponentially over the last decade. One of the reasons behind this is the wide adoption of cloud systems from the majority of players in multiple industries, such as online shopping, advertisement or remote computing. In this work we propose a Dataset foR cloud-nAtive memoRy anomaliEs: RARE. It includes labelled anomaly time-series data, comprising of over 900 unique metrics. This dataset has been generated using a microservice for injecting artificial byte stream in order to overload the nodes, provoking memory anomalies, which in some cases resulted in a crash. The system was built using a Kafka server deployed on a Kubernetes system. Moreover, in order to get access and download the metrics related to the server, we utilised Prometheus. In this paper we present a dataset that can be used coupled with machine learning algorithms for detecting anomalies in a cloud based system. The dataset will be available in the form of CSV file through an online repository. Moreover, we also included an example of application using a Random Forest algorithm for classifying the data as anomalous or not. The goal of the RARE dataset is to help in the development of more accurate and reliable machine learning methods for anomaly detection in cloud based systems.",
booktitle = "Proceedings of the 4th ACM SIGSOFT International Workshop on Machine-Learning Techniques for Software-Quality Evaluation",
pages = "19–24",
numpages = "6",
keywords = "machine learnin, Dataset, kubernetes, anomaly detection, self healing",
location = "Virtual, USA",
series = "MaLTeSQuE 2020"
}

@InProceedings{Saarimaki2020,
author = "Saarim{\"a}ki, {N}yyti 
and Lenarduzzi, {V}alentina 
and Vegas, {S}ira 
and Juristo, {N}atalia 
and Taibi, {D}avide",
title = "Cohort Studies in Software Engineering: A Vision of the Future",
year = "2020",
isbn = "9781450375801",
doi = "10.1145/3382494.3422160",
abstract = "Background. Most Mining Software Repositories (MSR) studies cannot obtain causal relations because they are not controlled experiments. The use of cohort studies as defined in epidemiology could help to overcome this shortcoming.Objective. Propose the adoption of cohort studies in MSR research in particular and empirical Software Engineering (SE) in general. Method. We run a preliminary literature review to show the current state of the practice of cohort studies in SE. We explore how cohort studies overcome the issues that prevent the identification of causality in this type of non-experimental designs.Results. The basic mechanism used by cohort studies to try to obtain causality consists of controlling potentially confounding variables. This is articulated by means of different techniques.Conclusion. Cohort studies seem to be a promising approach to be used in MSR in particular and SE in general.",
booktitle = "Proceedings of the 14th ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM)",
articleno = "33",
numpages = "6",
keywords = "Cohort Study, Empirical Methods, Empirical Software Engineering",
location = "Bari, Italy",
series = "ESEM '20"
}

@InProceedings{Lenarduzzi2020SEAA,
author="Lenarduzzi, {V}alentina 
and Taibi, {D}avide
and Tosi, {D}avide
and Lavazza, {L}uigi
and Morasca, {S}andro",
booktitle="2020 46th Euromicro Conference on Software Engineering and Advanced Applications (SEAA)", 
title="Open Source Software Evaluation, Selection, and Adoption: a Systematic Literature Review", 
year="2020",
volume="",
number="",
pages="437-444",
doi="10.1109/SEAA51224.2020.00076"
}

@misc{peltonen2020motivations,
title="Motivations, Benefits, and Issues for Adopting Micro-Frontends: A Multivocal Literature Review", 
author="Peltonen, {S}everi 
and Mezzalira, {L}uca 
and Taibi, {D}avide ",
year="2020",
eprint="2007.00293",
archivePrefix="arXiv",
primaryClass="cs.SE"
}

@InProceedings{ElIoini2020,
author = "El Ioini, {N}abil 
and Hästbacka, {D}avid 
and Pahl, {C}laus 
and Taibi, {D}avide ",
year = "2020",
month = "09",
pages = "",
title = "Platforms for Serverless at Edge: A Review",
booktitle="1st International Workshop on Edge Migration and Architecture",
}

@InProceedings{Lenarduzzi2020ICPC,
author="Lenarduzzi, {V}alentina 
and Palomba, {F}abio 
and Taibi, {D}avide 
and Tamburri, {D}amian {A}ndrew",
title = "OpenSZZ: A Free, Open-Source, Web-Accessible Implementation of the SZZ Algorithm",
year = "2020",
isbn = "9781450379588",
doi = "10.1145/3387904.3389295",
abstract = "The accurate identification of defect-inducing commits represents a key problem for researchers interested in studying the naturalness of defects and defining defect prediction models. To tackle this problem, software engineering researchers have relied on and proposed several implementations of the well-known Sliwerski-Zimmermann-Zeller (SZZ) algorithm. Despite its popularity and wide usage, no open-source, publicly available, and web-accessible implementation of the algorithm has been proposed so far. In this paper, we prototype and make available one such implementation for further use by practitioners and researchers alike. The evaluation of the proposed prototype showed competitive results and lays the foundation for future work. This paper outlines our prototype, illustrating its usage and reporting on its evaluation in action.",
booktitle = "Proceedings of the 28th International Conference on Program Comprehension",
pages = "446–450",
numpages = "5",
keywords = "Open-Source Tools, Software Defect Prediction, Web APIs, Software Defect Proneness",
location = "Seoul, Republic of Korea",
series = "ICPC '20",
}

@article{Avgeriou2020,
author="Avgeriou, {P}aris
and Taibi, {D}avide 
and Ampatzoglou, {A}postolos 
and Arcelli Fontana, {F}rancesca  
and Besker, {T}erese 
and Chatzigeorgiou, {A}lexandros 
and Lenarduzzi, {V}alentina 
and Martini, {A}ntonio
and Moschou, {N}asia
and Pigazzini, {I}laria 
and Saarim{\"a}ki, {N}yyti 
and Sas, {D}arius {D}aniel
and de Toledo, {S}aulo {S}oares 
and Tsintzira, {A}ngeliki {A}gathi",
journal="IEEE Software", 
title="An Overview and Comparison of Technical Debt Measurement Tools", 
year="2020",
doi="10.1109/MS.2020.3024958",
}

@InProceedings{Katin2020,
author = "Katin, {A}ndrej 
and Lenarduzzi, {V}alentina 
and Taibi, {D}avide 
and Mandic, {V}ladimir",
year = "2020",
month = "10",
title = "On the Technical Debt Prioritization and Cost Estimation with SonarQube tool",
booktitle="18th International Scientific Conference on Industrial Systems Industrial Innovation in Digital Age",
}

@InProceedings{Counsell2020,
author = "Counsell, {S}teve 
and Destefanis, {G}iuseppe
and Swift, {S}teve  
and Arzoky, {M}ahir 
and Taibi, {D}avide",
booktitle="2020 IEEE 20th International Conference on Software Quality, Reliability and Security (QRS)", 
title="On the Link Between Refactoring Activity and Class Cohesion Through the Prism of Two Cohesion-Based Metrics", 
year="2020",
pages="91-98",
doi="10.1109/QRS51102.2020.00024",
}

@article{Taibi2020IEEE,
  author="Taibi, {D}avide 
    and Spillner, {J}osef 
    and Wawruch, {K}onrad",
  journal="IEEE Software", 
  title="Serverless Computing-Where Are We Now, and Where Are We Heading?", 
  year="2021",
  volume="38",
  number="1",
  pages="25-31",
  doi="10.1109/MS.2020.3028708"
}


@InProceedings{Panichella2021,
author = "Panichella, {S}ebastiano 
and Imranur, {M}ohammad {R}ahman
and Taibi, {D}avide",
year = "2021",
month = "04",
pages = "",
booktitle="11th International Conference on Cloud Computing and Services Science",
title = "Structural Coupling for Microservices"
}


@InProceedings{Nguyen2022,
author = "Nguyen, {H}ung 
and   Lomio, {F}rancesco
and Pecorelli, {F}abiano 
and Lenarduzzi, {V}alentina",
year = "2022",
month = "03",
booktitle = "IEEE International Conference on Software Analysis, Evolution and Reengineering (SANER2022)",
title = "PANDORA: Continuous Mining Software Repository and Dataset Generation",
}
